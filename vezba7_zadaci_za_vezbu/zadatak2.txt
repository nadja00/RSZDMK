#include <avr/io.h>
#include <stdint.h>
#include "pin.h"
#include "timer0.h"
#include "usart.h"

int8_t checkLetter(int8_t c)
{
	uint8_t flag;

	while(usartAvailable() == 0);
	if(usartGetChar() == c)
		flag = 1;
	else
		flag = 0;

	return flag;
}

void LED_blink(uint8_t port, uint8_t pin, uint32_t perioda_treptaja, uint8_t num_of_rep)
{
	for(uint8_t i = 0; i < num_of_rep; i++)
	{
		pinSetValue(port, pin, HIGH);
		timer0DelayMs(perioda_treptaja/2);
		pinSetValue(port, pin, LOW);
		timer0DelayMs(perioda_treptaja/2);
	}

}

int main()
{
	pinInit(PORT_B, 5, OUTPUT);
	timer0InteruptInit();
	usartInit(9600);

	int8_t c, broj_treptaja = 1;
	uint32_t period = 2000;
	typedef enum state_t {CF0U, CF1, CF2D, OF0, OF1, OF2, CF0, CF1D, CF1U, CF2} state_t;
	state_t state = CF0U;

	pinSetValue(PORT_B, 5, LOW);

	while(1)
	{
		switch(state)
		{
			case CF0U:
				pinSetValue(PORT_B, 5, HIGH);
				state = CF1;
				break;
			case CF1:
				broj_treptaja = 3;
				LED_blink(PORT_B, 5, period, broj_treptaja);
				state = OF1;
				break;
			case CF2D:
				pinSetValue(PORT_B, 5, HIGH);
				state = CF1;
				break;
			case OF0:
				if(checkLetter('U'))
				{
					broj_treptaja = 1;
					LED_blink(PORT_B, 5, period, broj_treptaja);
					state = CF0U;
				}
				else
				{
					state = OF0;
				}
				break;
			case OF1:
				if(checkLetter('D'))
				{
					broj_treptaja = 1;
					LED_blink(PORT_B, 5, period, broj_treptaja);
					state = CF1D;
				}
				else if(checkLetter('U'))
				{
					broj_treptaja = 1;
					LED_blink(PORT_B, 5, period, broj_treptaja);
					state = CF1U;
				}
				else
					state = OF1;
				break;
			case OF2:
				break;
			case CF0:
				broj_treptaja = 3;
				LED_blink(PORT_B, 5, period, broj_treptaja);
				state = OF0;
				break;
			case CF1D:
				pinSetValue(PORT_B, 5, HIGH);
				state = CF0;
				break;
			case CF1U:
				pinSetValue(PORT_B, 5, HIGH);
				state = CF2;
				break;
			case CF2:
				broj_treptaja = 3;
				LED_blink(PORT_B, 5, period, broj_treptaja);
				state = OF2;
				break;

		}
	}

	return 0;
}
